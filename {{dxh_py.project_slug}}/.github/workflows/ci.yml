name: CI

# Enable Buildkit and let compose use it to speed up image building
env:
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1

on:
  pull_request:
    branches: ['master', 'main']
    paths-ignore: ['docs/**']

  push:
    branches: ['master', 'main']
    paths-ignore: ['docs/**']

concurrency:
  group: {% raw %}${{ github.head_ref || github.run_id }}{% endraw %}
  cancel-in-progress: true

jobs:
  linter:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"
          cache: pip
          cache-dependency-path: |
            requirements/base.txt
            requirements/local.txt

      - name: Run pre-commit
        uses: pre-commit/action@v2.0.3

  # With no caching at all the entire ci process takes 4m 30s to complete!
  pytest:
    runs-on: ubuntu-latest
    {%- if dxh_py.use_docker == 'n' %}

    services:
      {%- if dxh_py.use_celery == 'y' %}
      redis:
        image: redis:6
        ports:
          - 6379:6379
      {%- endif %}
      {%- if dxh_py.database_engine == 'postgresql' %}
      postgres:
        image: postgres:12
        ports:
          - 5432:5432
        env:
          POSTGRES_PASSWORD: postgres
      {%- endif %}
      {%- if dxh_py.database_engine == 'mysql' %}
      mysql:
        image: mysql:8.0
        ports:
          - 3306:3306
        env:
          MYSQL_PASSWORD: mysql
      {%- endif %}

    env:
      {%- if dxh_py.use_celery == 'y' %}
      CELERY_BROKER_URL: "redis://localhost:6379/0"
      {%- endif %}
      {%- if dxh_py.database_engine == 'postgresql' %}
      # postgres://user:password@host:port/database
      DATABASE_URL: "postgres://postgres:postgres@localhost:5432/postgres"
      {%- endif %}
      {%- if dxh_py.database_engine == 'mysql' %}
      # mysql://user:password@host:port/database
      DATABASE_URL: "mysql://mysql:mysql@localhost:3306/mysql"
      {%- endif %}
    {%- endif %}

    steps:

      - name: Checkout Code Repository
        uses: actions/checkout@v3
      {%- if dxh_py.use_docker == 'y' %}

      - name: Build the Stack
        run:  docker-compose -f local.yml build

      - name: Run DB Migrations
        run:  docker-compose -f local.yml run --rm django python manage.py migrate

      - name: Run Django Tests
        run:  docker-compose -f local.yml run django pytest

      - name: Tear down the Stack
        run:  docker-compose -f local.yml down
      {%- else %}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"
          cache: pip
          cache-dependency-path: |
            requirements/base.txt
            requirements/local.txt

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements/local.txt

      - name: Test with pytest
        run:  pytest
      {%- endif %}
